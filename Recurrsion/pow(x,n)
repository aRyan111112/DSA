//* using iteration *//
class Solution {
    public double myPow(double x, int n) {
        
        long m = n;
        if(m<0) {
            m = -(m);
        }
        System.out.println(m);
        double ans = 1.0;

        while(m>0) {
            if(m%2 == 1) {
                ans = ans * x;
                m = m - 1;
            } else {
                m = m/2;
                x = x*x;
            }
        }
        if(n<0) {
            ans = 1.0/ans;
        }
        return ans;
    }
}
============================================================================
//* Using recurrsion *//
class Solution {

    public double pow(double a, long b) {
        if(b == 0) return 1;

        double half = pow(a, b/2);
        double result = half * half;

        if(b%2==1) result = result*a;

        return result;

    }
    public double myPow(double x, int n) {
        long m = n;
        if(m<0) m = -m;

        double ans = pow(x, m);
        System.out.println(m);

        if(n<0) {
            return 1.0/ans;
        } else {
            return ans;
        }
    }
}
